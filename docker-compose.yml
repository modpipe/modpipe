name: modpipe
networks:
  traefik:
    external: true
  modpipe:
    external: true

services:
  modpipe-web:
    profiles:
      - production
      - dev
    build: .
    container_name: modpipe-web
    image: modpipe-web:latest
#    ports:
#      - 5000:5000
    volumes:
      - ./data/web:/data
      - ./app:/flask/app
      - ./static:/flask/static
      - ./config.py:/flask/config.py
    command: /flask/start.sh
    networks:
      - traefik
      - modpipe
    env_file:
      - path: ./env
        required: true
      - path: ./overrides.env
        required: false
    depends_on:
      - modpipe-db
      - modpipe-static
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik'
      - 'traefik.http.routers.modpipe-web.rule=Host(`modpipe.${DOMAIN:-example.com}`)'
      - 'traefik.http.routers.modpipe-web.entryPoints=https'
      - 'traefik.http.routers.modpipe-web.tls=true'
      - 'traefik.http.routers.modpipe-web.tls.certresolver=le'
      - "traefik.http.routers.modpipe-web.service=modpipe-web-entrypoint"
      - 'traefik.http.services.modpipe-web-entrypoint.loadbalancer.server.port=5000'

  modpipe-static:
    profiles:
      - production
      - dev
    container_name: modpipe-static
    image: nginx:alpine
    restart: always
    volumes:
      - ./static/srv:/srv
      - ./static/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/logs:/logs
    networks:
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik'
      - 'traefik.http.routers.modpipe-static.rule=Host(`modpipe.${DOMAIN:-example.com}`) && PathPrefix(`/img`) || PathPrefix(`/css`) || PathPrefix(`/js`)'
      - 'traefik.http.routers.modpipe-static.entryPoints=https'
      - 'traefik.http.routers.modpipe-static.tls=true'
      - 'traefik.http.routers.modpipe-static.tls.certresolver=le'
      - "traefik.http.routers.modpipe-static.service=modpipe-static-entrypoint"
      - 'traefik.http.services.modpipe-static-entrypoint.loadbalancer.server.port=80'

  modpipe-db:
    profiles:
      - production
      - dev
    container_name: modpipe-db
    hostname: modpipe_db
    image: postgres:16
    restart: always
    ports:
      - 5432:5432
    env_file:
      - path: ./env
        required: true
    volumes:
      - ./data/db:/data/db
    networks:
      - modpipe

  adminer:
    profiles:
      - dev
    container_name: modpipe_adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - modpipe
      - traefik
    depends_on:
      - modpipe-db
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik'
      - 'traefik.http.routers.modpipe-adminer.rule=Host(`modpipe.${DOMAIN:-example.com}`) && PathPrefix(`/adminer`)'
      - 'traefik.http.routers.modpipe-adminer.entryPoints=https'
      - 'traefik.http.routers.modpipe-adminer.tls=true'
      - 'traefik.http.routers.modpipe-adminer.tls.certresolver=le'
      - "traefik.http.routers.modpipe-adminer.service=modpipe-adminer-entrypoint"
      - 'traefik.http.services.modpipe-adminer-entrypoint.loadbalancer.server.port=8080'
      - 'traefik.http.routers.modpipe-adminer.middlewares=myauth'
      - 'traefik.http.middlewares.myauth.basicauth.users=admin:$$apr1$$yh36kr9w$$vpLPHqinbs96aO6OLon6X/'

  traefik:
    profiles:
      - proxy
    container_name: traefik
    image: traefik:v2.9
    restart: always
    command:
      - '--api=true'
      - '--api.dashboard=true'
      - '--api.insecure=true'
      - '--pilot.dashboard=false'
      - '--global.sendAnonymousUsage=false'
      - '--global.checkNewVersion=false'
      - '--log=true'
      - '--log.level=DEBUG'
      - '--log.filepath=/config/traefik.log'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      - '--entryPoints.http=true'
      - '--entryPoints.http.address=:80/tcp'
      - '--entryPoints.http.http.redirections.entryPoint.to=https'
      - '--entryPoints.http.http.redirections.entryPoint.scheme=https'
      - '--entryPoints.http.forwardedHeaders.trustedIPs=10.0.0.0/8,172.16.0.0/16,192.168.0.0/16,fc00::/7'
      - '--entryPoints.http.proxyProtocol.trustedIPs=10.0.0.0/8,172.16.0.0/16,192.168.0.0/16,fc00::/7'
      - '--entryPoints.http.forwardedHeaders.insecure=false'
      - '--entryPoints.http.proxyProtocol.insecure=false'
      - '--entryPoints.https=true'
      - '--entryPoints.https.address=:443/tcp'
      - '--entryPoints.https.forwardedHeaders.trustedIPs=10.0.0.0/8,172.16.0.0/16,192.168.0.0/16,fc00::/7'
      - '--entryPoints.https.proxyProtocol.trustedIPs=10.0.0.0/8,172.16.0.0/16,192.168.0.0/16,fc00::/7'
      - '--entryPoints.https.forwardedHeaders.insecure=false'
      - '--entryPoints.https.proxyProtocol.insecure=false'
      - '--accesslog'
      - '--certificatesresolvers.le.acme.email=admin@${DOMAIN:-example.com}'
      - '--certificatesresolvers.le.acme.storage=/certificates/acme.json'
      - '--certificatesresolvers.le.acme.httpchallenge=true'
      - '--certificatesresolvers.le.acme.httpchallenge.entrypoint=http'
      - '--providers.file.directory=/dynamic/'
    networks:
      traefik:
#      ipvlan:
#        ipv4_address: 192.168.2.10
#      home:
    ports:
      - 80:80
      - 443:443
      - 8888:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /rust/docker/data/traefik:/config
      - /rust/docker/data/traefik/dynamic:/dynamic
      - /rust/docker/data/traefik/certificates:/certificates
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`traefik.${DOMAIN:-example.com}`)'
      - 'traefik.http.routers.api.entryPoints=https'
      - 'traefik.http.routers.api.tls=true'
      - 'traefik.http.routers.api.service=api@internal'
      - 'traefik.http.routers.api.tls.certresolver=le'

  whoami:
    profiles:
      - proxy
    image: traefik/whoami
    restart: always
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.constraint-label=traefik
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.whoami-http.rule=Host(`whoami.${DOMAIN:-example.com}`)
      - traefik.http.routers.whoami-http.entrypoints=http
      - traefik.http.routers.whoami-http.middlewares=https-redirect
      - traefik.http.routers.whoami-https.rule=Host(`whoami.${DOMAIN:-example.com}`)
      - traefik.http.routers.whoami-https.entrypoints=https
      - traefik.http.routers.whoami-https.tls=true
      - traefik.http.services.whoami.loadbalancer.server.port=80